# setup
' LeonardPauli/lp-vue-base
	Created by Leonard Pauli, 17 apr 2018

see ./base-setup-from-scratch

get running:
	prerequisites:
		- see instantiate or git clone project that's used instantiate
		- cd project
		- name="$(pwd)"; name="${name##*/}"
	fix git hooks: // see base-setup-from-scratch."fix git hooks"
		- ./git-hook-runner.sh install pre-commit
		- ./git-hook-runner.sh install -noop all
	optinally get lpdocs:
		- lpdocs=$"(cd ~/some/path && git clone git@github.com:LeonardPauli/docs.git lpdocs && cd $_ && pwd)"
			// see $lpdocs/app/node/registry/local
		- echo "$lpdocs" | pbcopy // put in .env
	fix env:
		- cp .env.example .env
		-   // make it accessible for container
		- sed -e 's/my-app/'"$name"'/g' -i '' .env
		- echo "COMPOSE_PROJECT_NAME=$name" >> .env
		- vi .env // add/mod relevant parameter
			// eg. set image_name=...
			// env=dev, dev_on_host=true, lpdocs=/User/..., dev_window_setup, npm_config_registry, ...
		' optional: if data/ca already created, hard-link it // done in instantiate
			cd data && mkdir ca && ln ../path/to/original/files/data/ca/* ca/
	start dev:
		- ./dev (includes window automation, etc) or just ./web/container/start
			// optional: abort when installing of cypress starts, disconnect internet, and restart, if you want to avoid it (large download for testing)
		' optional: CA.cert.root.install data/ca.pem // + restart chrome

instantiate:
	- cd parent-dir
	- $lpdocs/app/vue/base/docs/instantiate.sh my-app
	- instantiate.sh:
		#!/usr/bin/env sh
		vue_base="$(script_dir)/.."
		name="$1"
		if [ -z "$name" ]; then echo "no name provided"; sleep 3; exit; fi
		vue_base_remote="$(cd "$vue_base" && git remote get-url origin)"
		git clone "$vue_base" "$name" && cd "$name"
		git remote remove origin
		git remote add lp-vue-base-remote "$vue_base_remote"
		git remote add lp-vue-base-local "$vue_base"
		git checkout -b master
		ca_dir="web/container/data/ca"
		if [ -d "$vue_base/$ca_dir" ]; then
			mkdir -p "$ca_dir"
			ln "$vue_base/$ca_dir"/* "$ca_dir"/
		fi
		# copying of node_modules might not work well because of links?
		mv lp-vue-base.sublime-project "$name".sublime-project
		sed -e 's/"name": "base-web"/"name": "'"$name"'-web"/' -i '' web/package.json
		echo "see $vue_base/docs/setup.instantiate for next steps"; sleep 3
		open $vue_base/docs/base-setup.rim; exit
	- see $lpdocs/admin/{licencing,readme}
	- package.json fixes
		add eg. "author": "Leonard Pauli <leonardpauli@me.com> (https://leonardpauli.me)",
		add licence, etc, see $lpdocs/app/node/registry/npm."package.json"
			// TODO: add dual licence by default? + default readme + licence in package.json
	- git add . && git commit -m "instantiated from lp-vue-base"
	- see "get running"


' TODO:
	- see $lpdocs/app/meta-seo."for vue"
	- analytics? (load via js, not through script tag?)
	- Use registry/local for for dev_on_host as well (just set npm_config_registry in ~/.zshrc?)
		remember to put back (or use --registry flag) to publish to main though
	- way to only do initial npm i in npm run dev if package.json has changed?


' Notes:
	see https://github.com/BretFisher/node-docker-good-defaults
	simpler hotel instead of nginx-base for ssl etc? nah, maybe use custom nginx-base with proxy_pass for local

' prefer router: vi router.js
	// landing
	{
		path: '/',
		name: 'start',
		component: Start,
	},
	// sub apps
	// { ...blocksaday (import blocksaday), path: '/blocksaday' },
	// Deprecated paths kept with redirects
	// { path: '/some-legacy-path', redirect: '/misc/playground' },
	{ path: '*', redirect: '/' }, // alt: error page?? though indexed wrongly; -> redirect home, but show not found modal with faulty path + search options

' npm i mobx movue
	vi main.js:
		import Movue from 'movue'
		import * as mobx from 'mobx'
		Vue.use(Movue, mobx)

' ExampleComponent
	<template lang="pug">
	.example-component
		h1 {{msg}}
	</template>
	<script>
	export default {
		name: 'HelloWorld',
		props: {
			msg: {type: String},
		},
	}
	</script>
	<style lang="stylus" scoped>
	.example-component
		h1
			color red
	</style>
